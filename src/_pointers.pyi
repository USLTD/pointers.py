from types import FrameType
from typing import Any, Callable, Type, TypeVar

_T = TypeVar("_T")
_A = TypeVar("_A")

def add_ref(__obj: Any) -> None: ...
def remove_ref(__obj: Any) -> None: ...
def force_set_attr(__typ: type[Any], __key: str, __value: Any) -> None: ...
def set_ref(__obj: Any, __count: int) -> None: ...
def handle(
    __func: Callable[..., _T],
    __args: tuple[Any, ...] | None = None,
    __kwargs: dict[str, Any] | None = None,
) -> _T: ...
def run_stack_callback(
    __size: int, __ptr: Type[_T], __func: Callable[[_T], _A]
) -> _A: ...
def force_update_locals(__f: FrameType, __key: str, __value: Any) -> None: ...
